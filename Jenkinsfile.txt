pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo "Building code using Maven"  // Prints a message
            }
        }

        stage('Unit and Integration Tests') {
            steps {
                echo "Running unit tests using Maven"
                echo "Running integration tests using Maven"
            }
            post {  // Sends email notification after tests
                always {
                    emailext(
                        subject: "Test Stage Status: ${currentBuild.currentResult}",
                        body: "Test log attached.",
                        attachLog: true,
                        to: "felix.hendrawan.2005@gmail.com"
                    )
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                echo "Analysing and checking the quality of the code using SonarQube"
            }
        }
        
        stage('Security Scan') {
            steps {
                echo "Performing security scan on the code using OWASP"
            }
            post {  // Sends email notification after security scan
                always {
                    emailext(
                        subject: "Security Scan Status: ${currentBuild.currentResult}",
                        body: "Scan log attached.",
                        attachLog: true,
                        to: "felix.hendrawan.2005@gmail.com"
                    )
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                echo "Deploying application to AWS"
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo "Running integration tests on the staging environment"
            }
        }
        
        stage('Deploy to Production') {
            steps {
                echo "Deploying application to AWS EC2"
            }
        }
    }
}
